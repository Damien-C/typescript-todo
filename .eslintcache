[{"/Users/damienchoi/ReactProjects/typescript-todo/src/index.tsx":"1","/Users/damienchoi/ReactProjects/typescript-todo/src/reportWebVitals.ts":"2","/Users/damienchoi/ReactProjects/typescript-todo/src/App.tsx":"3","/Users/damienchoi/ReactProjects/typescript-todo/src/Todo.tsx":"4"},{"size":500,"mtime":1607631247726,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1607631247727,"results":"7","hashOfConfig":"6"},{"size":1555,"mtime":1607634179577,"results":"8","hashOfConfig":"6"},{"size":615,"mtime":1607634358006,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"19a3pce",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/damienchoi/ReactProjects/typescript-todo/src/index.tsx",[],["20","21"],"/Users/damienchoi/ReactProjects/typescript-todo/src/reportWebVitals.ts",[],"/Users/damienchoi/ReactProjects/typescript-todo/src/App.tsx",["22","23","24","25","26"],"import React, { useReducer, useState } from 'react';\nimport Todo from './Todo'\nimport logo from './logo.svg';\nimport './App.css';\nimport { displayPartsToString, setTokenSourceMapRange, toEditorSettings } from 'typescript';\nimport { domainToASCII } from 'url';\n\nexport const ACTIONS = {\n  ADD_TODO: 'add-todo',\n  TOGGLE_TODO: 'toggle-todo',\n  DELELTE_TODO: 'delete-todo'\n}\n\nfunction reducer(todos: any, action:any){\n  switch (action.type){\n    case ACTIONS.ADD_TODO:\n      return [...todos, newTodo(action.payload.name)]\n    case ACTIONS.TOGGLE_TODO:\n      return todos.map((todo:any) => {\n        if (todo.id === action.payload.id){\n          return { ...todo, complete: !todo.complete}\n        }\n        return todo\n      })\n    case ACTIONS.DELELTE_TODO: \n        return todos.filter((todo:any) => todo.id !== action.payload.id)\n    default: \n      return todos\n  }\n}\n\nfunction newTodo(name: any){\n  return { id: Date.now(), name: name, complete: false}\n}\n\nconst App: React.FC = () => {\n\n  const [todos, dispatch] = useReducer(reducer, [])\n  const [name, setName] = useState('')\n\n  function handleSubmit(e: any) {\n    e.preventDefault()\n    dispatch({ type: ACTIONS.ADD_TODO, payload: { name: name} })\n    setName('')\n  }\n\n  console.log(todos)\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type='text' value={name} onChange={e => setName(e.target.value)} />\n      </form>\n      {todos.map((todo:any) => {\n        return <Todo key={todo.id} todo={todo} dispatch={dispatch} />\n      })}\n      \n    </>\n\n  )\n}\n\nexport default App;\n","/Users/damienchoi/ReactProjects/typescript-todo/src/Todo.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":5,"column":10,"nodeType":"33","messageId":"34","endLine":5,"endColumn":30},{"ruleId":"31","severity":1,"message":"36","line":5,"column":32,"nodeType":"33","messageId":"34","endLine":5,"endColumn":54},{"ruleId":"31","severity":1,"message":"37","line":5,"column":56,"nodeType":"33","messageId":"34","endLine":5,"endColumn":72},{"ruleId":"31","severity":1,"message":"38","line":6,"column":10,"nodeType":"33","messageId":"34","endLine":6,"endColumn":23},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'displayPartsToString' is defined but never used.","'setTokenSourceMapRange' is defined but never used.","'toEditorSettings' is defined but never used.","'domainToASCII' is defined but never used.","no-global-assign","no-unsafe-negation"]